setwd("~/GIT/Data-RollingCode")
#fijo el directorio donde voy a trabajar
bank <- read.csv('./Modulo_3/ejercicios R/bank.csv', header = T, sep = ';')
library(tidyverse)
library(data.table)
ncol(bank)
nrow(bank)
str(bank)
# Variables:
column_names <- c(
'edad',
'trabajo_tipo',
'estado_civil',
'educación_nivel',
'credito_en_mora',
'balance_prom_anual',
'credito_hipotecario',
'credito_personal',
'tipo_contacto',
'ultimo_dia_mes_contacto',
'ultimo_mes_anio_contacto',
'seg_duracion_contacto',
'cant_contactos_en_campania',
'dias_desde_ultimo_contacto',
'cant_contactos_antes_campania',
'resultado_campania_previa',
'target'
)
names
# Observar la estadística descriptiva del dataset.
summary(bank)
hist(bank$edad)
hist(bank$edad)
ggplot(data = bank) +
geom_bar(aes(x = trabajo_tipo)) +
theme(axis.text.x = element_text(angle = 90))
names(bank) <- column_names
hist(bank$edad)
ggplot(data = bank) +
geom_bar(aes(x = trabajo_tipo)) +
theme(axis.text.x = element_text(angle = 90))
x <- bank %>% filter(target == 'yes')
ggplot(bank, aes(x = edad, y = target)) +
geom_point()
ggplot(bank, aes(x = target, y = edad)) +
geom_point()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
geom_point()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
geom_point() +
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
stat_summary(fun.y=mean, geom="point", shape=23, size=2) +
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
stat_summary(fun.x=mean, geom="point", shape=23, size=2) +
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="red")+
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
stat_summary(fun.data=x, mult=1, geom="pointrange", color="red") +
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
stat_summary(fun.data=x, mult=1, geom="pointrange", color="red") +
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
coord_flip()
ggplot(bank, aes(x = target, y = edad)) +
geom_violin() +
theme(legend.position="top") +
coord_flip()
---
title: "Ejercicio Bank"
output: html_notebook
---
df <- read.csv('./Modulo_3/ejercicios R/bank.csv', header = T, sep = ';')
df <- read.csv('./Modulo_3/ejercicios R/bank.csv', header = T, sep = ';')
df <- read.csv('./Modulo_3/ejercicios R/bank.csv', header = T, sep = ';')
df <- read.csv('./ejercicios R/bank.csv', header = T, sep = ';')
df <- read_csv('./ejercicios R/bank.csv', header = T, sep = ';')
df <- read_csv('./ejercicios R/bank.csv', header = T, separator = ';')
df <- read_csv('./ejercicios R/bank.csv', header = T)
df <- read_csv('./ejercicios R/bank.csv')
View(df)
df <- read_csv('./ejercicios R/bank.csv', delim=';')
df <- read_csv('./ejercicios R/bank.csv', delim=';')
df <- read_delim('./ejercicios R/bank.csv', delim=';')
View(df)
library(data.table)
df <- read_delim('./ejercicios R/bank.csv', delim = ';');
```{r echo=TRUE}
library(tidyverse)
library(tidyverse)
```{r}
library(tidyverse)
library(data.table)
library(tidyverse)
library(data.table)
df <- read_delim('./ejercicios R/bank.csv', delim = ';')
library(tidyverse)
library(data.table)
library(tidyverse)
library(data.table)
library(tidyverse)
library(data.table)
nuevas_col <- c(
'edad',
'trabajo_tipo',
'estado_civil',
'educación_nivel',
'credito_en_mora',
'balance_prom_anual',
'credito_hipotecario',
'credito_personal',
'tipo_contacto',
'ultimo_dia_mes_contacto',
'ultimo_mes_anio_contacto',
'seg_duracion_contacto',
'cant_contactos_en_campania',
'dias_desde_ultimo_contacto',
'cant_contactos_antes_campania',
'resultado_campania_previa',
'target'
)
View(df)
df <- read_delim('./ejercicios R/bank.csv', delim = ';')
nuevas_col <- c(
'edad',
'trabajo_tipo',
'estado_civil',
'educación_nivel',
'credito_en_mora',
'balance_prom_anual',
'credito_hipotecario',
'credito_personal',
'tipo_contacto',
'ultimo_dia_mes_contacto',
'ultimo_mes_anio_contacto',
'seg_duracion_contacto',
'cant_contactos_en_campania',
'dias_desde_ultimo_contacto',
'cant_contactos_antes_campania',
'resultado_campania_previa',
'target'
)
names(df) <- nuevas_col
View(df)
summary(df
summary(df)
summary(df)
plotmatrix(df)
ggpairs(df)
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs(df)
describe(df)
describe(df)
summary(df)
ggplot(df) +
geom_bar(aes(x = trabajo_tipo)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x = trabajo_tipo)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x = trabajo_tipo)) +
geom_bar() +
scale_x_discrete(limits = trabajo_tipo) +
theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x = trabajo_tipo)) +
geom_bar() +
scale_x_discrete() +
theme(axis.text.x = element_text(angle = 90))
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity')
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90))
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90))
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Petal and sepal length of iris")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo"))
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, colour=target)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, color = target)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, color = estado_civil)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, color = factor(target))) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, color = factor(df$target))) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, colour = factor(df$target))) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, class = factor(df$target))) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, fill = factor(df$target))) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = )) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, fill=target)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE))
df %>%
count(trabajo_tipo) %>%
df %>%
count(trabajo_tipo)
df %>%
select() %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE))
df %>%
select(trabajo_tipo, target) %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE))
df %>%
select(trabajo_tipo, target) %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n, color=target)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
filter(target == 'yes') %>%
ggplot(aes(x = target)) +
geom_bar()
df %>%
ggplot(aes(x = target)) +
geom_bar()
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
df %>%
count(trabajo_tipo) %>%
mutate(trabajo_tipo = fct_reorder(trabajo_tipo, n, .desc = TRUE)) %>%
ggplot(aes(x = trabajo_tipo, y = n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Conteo de según tipo de trabajo y target") +
labs(y = "Conteo", x = "Tipo de Trabajo")
